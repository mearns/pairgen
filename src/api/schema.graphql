
scalar Long

type Pair {
  role1: String!
  role2: String!
  tuple: [String!]!
}

type Duration {
  ms: Long!
  text(lang: String!, precision: Int = null): String!
}

type Date {
  timestamp: Int!
  timestampMs: Long!
  isoString: String!
}

type Pairings {
  pairs: [Pair!]!
  rotation: Int!
  interval: Int!
  offset: Int!
  epoch: Date!
  date: Date!
  period: Duration!
  elapsedTime: Duration!
}

type Query {
  pairings(members: [String!]!): Pairings!
}


